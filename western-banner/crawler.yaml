- name: Count loop
  set_fact:
    counter: "{{counter | int + 1 }}"

- debug: msg="**********loop count = {{ counter }}**********"


- name: Crawler tasks
  block:
    - debug: msg="**********Scanning on {{ansible_hostname}}:{{ansible_host}}**********"

    - name: Retrieve switch facts
      ios_facts:
      register: switch_facts
        
    - name: Extract switch information
      set_fact:
        switch_details:
          hostname: "{{ switch_facts.ansible_facts.ansible_net_hostname }}"
          model: "{{ switch_facts.ansible_facts.ansible_net_model }}"
          store: "{{ switch_facts.ansible_facts.ansible_net_hostname.split('sw')[0] }}"
          ip: "{{ switch_facts.ansible_facts.ansible_net_all_ipv4_addresses[0] }}"
          serialnumber: "{{ switch_facts.ansible_facts.ansible_net_serialnum  }}"
          stackednumber: "{{ switch_facts.ansible_facts.ansible_net_stacked_models | length }}"
          stackedmodel: "{{ switch_facts.ansible_facts.ansible_net_stacked_models | flatten }}"
          stackedserialnum: "{{ switch_facts.ansible_facts.ansible_net_stacked_serialnums | flatten  }}"
          connection: "success"
          errormsg: ""
      

    - name: Add switch to switches list
      set_fact:
        switches: "{{ switches + [switch_details] }}"


    - name: Debug switches list
      debug:
        msg: "{{switches}}"

    - name: Generate CSV output
      lineinfile:
        dest: "./output/switch_inventory.csv"
        line: "{{group_names[-1] }},{{ switch_details.store }},{{ switch_details.hostname }},{{ switch_details.ip }},{{ switch_details.model }},{{ switch_details.serialnumber }},{{ switch_details.stackednumber }},{{ switch_details.stackedserialnum | regex_replace(',', ' ') | regex_replace('u', '') }},{{ switch_details.connection }},{{ switch_details.errormsg }}"
        state: present
      delegate_to: localhost

    - name: Generate updated hosts
      lineinfile:
        dest: "./inventory/updated_hosts"
        line: "{{ switch_details.hostname }}    ansible_host={{ switch_details.ip }}"
        state: present
        insertafter: '^\[{{group_names[-1] }}\]'
      when:
        - switch_details.connection == "success"
      delegate_to: localhost

    - name: Add switch to visited list
      set_fact:
        visited: "{{ visited | union([switch_details.hostname]) }}"

    - name: Debug visited list
      debug:
        msg: "{{visited}}"

    - name: Reset cdp_neighbors
      set_fact:
        cdp_neighbors: []

    - name: Get CDP neighbor details
      ios_command:
        commands:
          - show cdp neigh detail | i sw|IP address
      register: cdp_output

    - name: Extract CDP neighbor hostname and ip
      set_fact:
        cdp_neighbors: "{{ cdp_neighbors + [{'neighbor_of': switch_details.hostname, 'hostname': item.split(': ')[1].split('.')[0], 'ip': ansible_loop.nextitem.split(': ')[1] }] }}"   
      loop: "{{ cdp_output.stdout_lines | flatten }}"
      loop_control:
        extended: true
      when: "'Device ID' in item"

    - name: Get a unique set from cdp_neighbors
      set_fact:
        cdp_neighbors: "{{ cdp_neighbors | unique }}" 

    - name: Debug cdp_neighbors
      debug:
        msg: "{{cdp_neighbors}}"

    - name: Crawling next
      include_tasks: crawler.yaml
      when: target.hostname not in visited
      loop: "{{ cdp_neighbors }}"
      loop_control:
        loop_var: target
      vars:
        ansible_host: "{{ target.ip }}"
        ansible_hostname: "{{ target.hostname }}"

  rescue:    
    - name: Rescue switch information
      set_fact:
        switch_details:
          hostname: "{{ ansible_hostname }}"
          model: ""
          store: "{{ ansible_hostname.split('sw')[0] }}"
          ip: "{{ ansible_host }}"
          serialnumber: ""
          stackednumber: ""
          stackedmodel: ""
          stackedserialnum: ""
          connection: "failed"
          errormsg: "{{ switch_facts.msg | default('')  }}"

    - name: Add switch to switches list
      set_fact:
        switches: "{{ switches + [switch_details] }}"

    - name: Debug switches list
      debug:
        msg: "{{switches}}"

    - name: Generate CSV output
      lineinfile:
        dest: "./output/switch_inventory.csv"
        line: "{{group_names[-1] }},{{ switch_details.store }},{{ switch_details.hostname }},{{ switch_details.ip }},{{ switch_details.model }},{{ switch_details.serialnumber }},{{ switch_details.stackednumber }},{{ switch_details.stackedserialnum | regex_replace(',', ' ') | regex_replace('u', '') }},{{ switch_details.connection }},{{ switch_details.errormsg }}"
        state: present
      delegate_to: localhost

    # - name: Generate updated hosts
    #   lineinfile:
    #     dest: "./inventory/updated_hosts"
    #     line: "{{ switch_details.hostname }}    ansible_host={{ switch_details.ip }}"
    #     state: present
    #     insertafter: '^\[{{group_names[-1] }}\]'
    #   when:
    #     - switch_details.connection == "success"
    #   delegate_to: localhost

    - name: Add switch to visited list
      set_fact:
        visited: "{{ visited | union([switch_details.hostname]) }}"

    - name: Debug visited list
      debug:
        msg: "{{visited}}"
        
    - name: Capture error log
      lineinfile:
        dest: "./error.log"
        line: "{{switch_details.hostname}}({{switch_details.ip}}): {{switch_facts.msg | default('')}}"
        state: present
        create: true
        insertafter:
      delegate_to: localhost














