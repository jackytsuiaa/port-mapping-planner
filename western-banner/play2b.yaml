- name: Get Interface Information
  hosts: CTC
  serial: "50%"
  gather_facts: no
  vars:
    interface_result: []
    mac_result: []
    new_vlan_result: []
    description_result: []
    neighbor_result: []
    show_mac: "show mac address-table | i dummykeyword"

  tasks:
    - name: Gather interface information
      ios_command:
        commands:
          - "show interfaces status"
      register: interface_output

    - name: beautify interface_output
      set_fact:
        beautified_interface_output: "{{ interface_output.stdout_lines| flatten | regex_replace('  +', ' ')  }}"

    - name: Process interface output
      include_tasks: process_interface.yaml
      vars:
        interface: "{{ item.split(' ') }}"
        ansible_hostname: "{{ inventory_hostname }}"
      loop: "{{ beautified_interface_output[1:]  }}"
    
    
    - name: print show_mac
      debug: 
        msg="**********{{ show_mac }}**********"

    - name: Gather mac
      block:
        - name: Run show mac address-table
          ios_command:
            commands:
              - "{{show_mac}}"
            retries: 5
            interval: 10
          register: mac_output
      rescue:
        - name: Rescue show mac address-table
          ios_command:
            commands:
              - "show mac address-table | i Gi|Fa"
            retries: 5
            interval: 10
          register: mac_output
        
    - name: beautify mac_output
      set_fact:
        beautified_mac_output: "{{ mac_output.stdout_lines| flatten | regex_replace(' +', ' ')}}"

    - name: Process mac output
      include_tasks: process_mac.yaml
      vars:
        mac: "{{ item | regex_replace('^ ', '') }}"
      loop: "{{ beautified_mac_output  }}"


    - name: Update interface result with mac address
      set_fact:
        interface_result: "{{interface_result | difference([item]) +  
        [{'store': item.store, 
        'switch': item.switch, 
        'name': item.name, 
        'description': item.description, 
        'neighbor': item.neighbor, 
        'status': item.status, 
        'vlan': item.vlan, 
        'new_vlan': item.new_vlan, 
        'mac': mac_result[item.name] }] }}"
      when: 
       - item.vlan != 'trunk'
       - item.vlan != 'routed'
       - mac_result[item.name] is defined
      loop: "{{interface_result}}"

    
    - name: Retrieve switch facts
      ios_facts:
      register: switch_facts
      
    - name: Gather neighbor
      set_fact:
        neighbor: "{{ switch_facts.ansible_facts.ansible_net_neighbors }}"

    - name: Process neighbor
      include_tasks: process_neighbor.yaml
      loop: "{{ neighbor | dict2items | subelements('value') }}"


    - name: Update interface result with neighbor
      set_fact:
        interface_result: "{{interface_result | difference([item]) +  
        [{'store': item.store, 
        'switch': item.switch, 
        'name': item.name, 
        'description': item.description, 
        'neighbor': neighbor_result[item.name], 
        'status': item.status, 
        'vlan': item.vlan, 
        'new_vlan': item.new_vlan, 
        'mac': item.mac }] }}"
      when:
       - neighbor_result[item.name] is defined
      loop: "{{interface_result}}"

    - name: Process new vlan
      include_tasks: process_new_vlan.yaml
      loop: "{{ interface_result  }}"

    - name: Update interface result with new vlan and description
      set_fact:
        interface_result: "{{interface_result | difference([item]) +  
        [{'store': item.store, 
        'switch': item.switch, 
        'name': item.name, 
        'description': description_result[item.name], 
        'neighbor': item.neighbor, 
        'status': item.status, 
        'vlan': item.vlan, 
        'new_vlan': new_vlan_result[item.name], 
        'mac': item.mac }] }}"
      when: 
       - item.vlan != 'trunk'
       - item.vlan != 'routed'
       - new_vlan_result[item.name] is defined
       - description_result[item.name] is defined
      loop: "{{interface_result}}"

    - name: Generate CSV output
      lineinfile:
        dest: "./output/interface_report.csv"
        line: "{{group_names[-1] }},{{ item.store }},{{ item.switch }},{{ item.name }},{{ item.description }},{{ item.neighbor }},{{ item.status }},{{ item.vlan }},{{ item.mac }},{{ item.new_vlan }}"
        state: present
      loop: "{{ interface_result }}"
      delegate_to: localhost

    - name: debug mac_output
      debug:
        msg: "{{ mac_output.stdout_lines }}"   

    - name: debug interface_output
      debug:
        msg: "{{ interface_output.stdout_lines }}"   

    - name: debug interface_result
      debug:
        msg: "{{ interface_result }}"   

    - name: Gather full mac address-table
      ios_command:
        commands:
          - "show mac address-table"
        retries: 5
        interval: 10
      register: mac_address_table_output

    - name: Generate mac output
      lineinfile:
        dest: "./output/mac_address_table/{{inventory_hostname}}.csv"
        line: "{{item}}"
        create: true
        state: present
      with_items: "{{ mac_address_table_output.stdout_lines }}"
      delegate_to: localhost

